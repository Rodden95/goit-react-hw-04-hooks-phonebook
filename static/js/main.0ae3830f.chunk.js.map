{"version":3,"sources":["components/Contacts/Contacts.js","components/Filter/Filter.js","components/Phonebook/Phonebook.js","App.js","index.js"],"names":["Contacts","contacts","deleteContact","className","ListGroup","as","map","item","Item","name","number","Button","variant","onClick","Filter","filter","Form","Group","Label","Control","type","onChange","PropTypes","object","isRequired","func","Phonebook","onSubmitFunc","useState","setName","setNumber","id","setId","inputValueHandler","target","value","controlId","pattern","title","required","event","preventDefault","shortid","generate","length","array","App","addContacts","setFilter","updateLocal","setUpdateLocal","useEffect","localStorage","setItem","JSON","stringify","parse","getItem","newContact","find","e","state","alert","toLowerCase","includes","data","currentId","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0ae3830f.chunk.js","sourcesContent":["import { ListGroup, Button } from 'react-bootstrap';\r\nimport PropTypes from 'prop-types';\r\nexport default function Contacts({ contacts, deleteContact }) {\r\n  \r\n  return (\r\n    <div className='container'>\r\n      <h2>Contacts:</h2>\r\n      <ListGroup as=\"ul\" >\r\n        {contacts.map(item => {\r\n          return (\r\n            <ListGroup.Item as=\"li\" key={item.name} className='item'>\r\n              <span className='margin'>{item.name} : {item.number}</span>\r\n               \r\n              <Button variant=\"danger\" onClick={() => {\r\n                deleteContact(item.name)\r\n              }} name={item.name}> Delete</Button>\r\n            </ListGroup.Item>\r\n          )\r\n        })}\r\n      </ListGroup>\r\n    </div>\r\n    \r\n  );\r\n};\r\n\r\n\r\nPropTypes.Contacts = {\r\n  contacts: PropTypes.object.isRequired,\r\n  deleteContact: PropTypes.func.isRequired,\r\n};","\r\nimport { Form } from 'react-bootstrap';\r\nimport PropTypes from 'prop-types';\r\nexport default function Filter({filter}){\r\n\r\n  return (\r\n    <Form>\r\n      <Form.Group className=\"mb-3\">\r\n        <Form.Label>Find contact</Form.Label>\r\n        <Form.Control type=\"text\" onChange={filter} />\r\n      </Form.Group>\r\n    </Form>\r\n  );\r\n};\r\n\r\nPropTypes.Filter = {\r\n  filter: PropTypes.func.isRequired,\r\n};","import { useState } from \"react\";\r\nimport { Button, Form } from 'react-bootstrap';\r\nimport PropTypes from 'prop-types';\r\nimport Contacts from \"../Contacts\";\r\nimport Filter from \"../Filter\";\r\nimport shortid from \"shortid\";\r\n\r\nexport default function Phonebook({onSubmitFunc, contacts, filter, deleteContact}) {\r\n\r\n  const [name, setName] = useState('');\r\n  const [number, setNumber] = useState('');\r\n  const [id, setId] = useState('');\r\n\r\n  const onSubmitInputHander = event => {\r\n    event.preventDefault();\r\n    setId(shortid.generate());\r\n    onSubmitFunc({ name, number, id });\r\n  };\r\n  \r\n  const inputValueHandler = ({target:{name, value}}) => {\r\n    switch (name) {\r\n      case 'name':\r\n        setName(value);\r\n        break;\r\n      case 'number':\r\n        setNumber(value);\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <Form >\r\n        <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\r\n          <Form.Label>Contact name</Form.Label>\r\n          <Form.Control\r\n            type=\"text\"\r\n            name=\"name\"\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\r\n            required\r\n            onChange={inputValueHandler}\r\n          />\r\n          <Form.Label>Number</Form.Label>\r\n          <Form.Control\r\n            type=\"tel\"\r\n            name=\"number\"\r\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\r\n            required\r\n            onChange={inputValueHandler}\r\n          />\r\n        </Form.Group>\r\n        <Button\r\n          variant=\"primary\"\r\n          type=\"submit\"\r\n          onClick={onSubmitInputHander}>Submit</Button>\r\n      </Form>\r\n      <Filter filter={filter} />\r\n      {\r\n        contacts.length === 0 ? <h2>List clear</h2> :\r\n          <Contacts contacts={contacts} deleteContact={deleteContact} />\r\n      }\r\n    </div>\r\n  )\r\n}\r\n\r\nPropTypes.Phonebook = {\r\n  onSubmitFunc: PropTypes.func,\r\n  contacts: PropTypes.array,\r\n  filter: PropTypes.func,\r\n  deleteContact: PropTypes.func,\r\n};","import { useState, useEffect } from \"react\";\r\nimport './App.scss';\r\nimport Phonebook from \"./components/Phonebook\";\r\n\r\nfunction App() {\r\n\r\n  const [contacts, addContacts] = useState([]);\r\n  const [filter, setFilter] = useState('');\r\n  const [updateLocal, setUpdateLocal] = useState(false);\r\n\r\n  const contactAdd = ({ name, number, id }) => {\r\n    const newContact = { id, name, number };\r\n    let findResult = contacts.find(e => e.name === name);\r\n    typeof findResult !== 'object' ?\r\n      addContacts(state => ([...state, newContact])) : alert('this name is present in');\r\n    setUpdateLocal(true);\r\n  }\r\n\r\n  const contactsFilter = () =>\r\n    contacts.filter(({ name }) =>\r\n      name.toLowerCase().includes(filter));\r\n  \r\n  const filterInputValueToState = data =>\r\n    setFilter(data.target.value.toLowerCase());\r\n  \r\n  useEffect(() => {\r\n    if (updateLocal) {\r\n      localStorage.setItem('contacts', JSON.stringify(contacts))\r\n      setUpdateLocal(false)\r\n      return;\r\n    }\r\n  }, [contacts, updateLocal])\r\n  \r\n  const contactDelete = currentId => {\r\n    addContacts(contacts.filter(({ name }) =>\r\n      name !== currentId));\r\n    setUpdateLocal(true)\r\n  }\r\n\r\n  useEffect(() => addContacts(JSON.parse(localStorage.getItem('contacts'))), []);\r\n    \r\n  return (\r\n    <div>\r\n      <Phonebook\r\n        onSubmitFunc={contactAdd}\r\n        contacts={contactsFilter()}\r\n        filter={filterInputValueToState}\r\n        deleteContact={contactDelete}\r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n    \r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}